<% layout('./layouts/layout') -%>

<div class="row">
    <div class="col-md-10 offset-md-1 mb-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="m-0">Nuova Transazione</h3>
            <button type="submit" form="transactionForm" class="custom-button">
                <i class="bi bi-check2-circle me-1"></i> Salva
            </button>
        </div>
        
        <div class="compact-total-counter mb-4">
            <div class="fw-bold">Totale: <span id="totalAmount">€0.00</span></div>
            <div class="small">Partecipanti: <span id="participantCount">0</span></div>
        </div>
        
        <form id="transactionForm" class="validated-form" method="post" action="/transactions/new/<%= group._id %>" novalidate>
            <div class="mb-4">
                <% if(group.participants && group.participants.length > 0) { %>
                    <div class="custom-card mb-4">
                        <div class="custom-card-header d-flex justify-content-between align-items-center">
                            <span>Membri del gruppo</span>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="selectAllMembers" checked>
                                <label class="form-check-label small" for="selectAllMembers">
                                    Seleziona tutti
                                </label>
                            </div>
                        </div>
                        <div class="custom-card-body">
                            <% for(let i = 0; i < group.participants.length; i++) { 
                                const p = group.participants[i]; %>
                                <div class="row mb-3 participant-row" data-user-type="member">
                                    <div class="col-6">
                                        <input type="text" class="form-control custom-input" name="user[]" value="<%= p.username %>" readonly>
                                    </div>
                                    <div class="col-4">
                                        <div class="input-group">
                                            <span class="input-group-text custom-input-group">€</span>
                                            <input type="number" min="0" step="0.01" class="form-control custom-input amount-input no-spinner" name="amount[]" placeholder="0.00">
                                        </div>
                                    </div>
                                    <div class="col d-flex align-items-center">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input participation-checkbox" type="checkbox" 
                                                   id="participate_member_<%= i %>" 
                                                   name="shouldParticipate[]" 
                                                   value="<%= p.username %>" 
                                                   checked>
                                            <label class="form-check-label small" for="participate_member_<%= i %>">
                                                Partecipa
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% } %>
                
                <% if(group.invitedUsers && group.invitedUsers.length > 0) { %>
                    <div class="custom-card">
                        <div class="custom-card-header d-flex justify-content-between align-items-center">
                            <span>Utenti invitati</span>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="selectAllInvited" checked>
                                <label class="form-check-label small" for="selectAllInvited">
                                    Seleziona tutti
                                </label>
                            </div>
                        </div>
                        <div class="custom-card-body">
                            <% for(let i = 0; i < group.invitedUsers.length; i++) { %>
                                <div class="row mb-3 participant-row" data-user-type="invited">
                                    <div class="col-6">
                                        <div class="input-group">
                                            <input type="text" class="form-control custom-input" name="invitedUsername[]" 
                                                value="<%= group.invitedUsers[i].name %>" readonly>
                                            <span class="input-group-text custom-input-group" title="Utente invitato">
                                                <i class="bi bi-envelope"></i>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="input-group">
                                            <span class="input-group-text custom-input-group">€</span>
                                            <input type="number" min="0" step="0.01" class="form-control custom-input amount-input no-spinner" name="invitedAmount[]" placeholder="0.00">
                                        </div>
                                    </div>
                                    <div class="col d-flex align-items-center">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input participation-checkbox" type="checkbox" 
                                                   id="participate_invited_<%= i %>" 
                                                   name="shouldParticipateInvited[]" 
                                                   value="<%= group.invitedUsers[i].name %>" 
                                                   checked>
                                            <label class="form-check-label small" for="participate_invited_<%= i %>">
                                                Partecipa
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% } %>
            </div>
            
            <div class="alert alert-info" id="participationInfo" style="display: none;">
                <i class="bi bi-info-circle me-2"></i>
                <span id="participationText"></span>
            </div>
            
            <div class="mb-4">
                <label class="form-label">Categoria</label>
                <div class="category-grid-symmetric">
                    <% 
                    const categoryEmojis = {
                        "Cibo": "🍕",
                        "Trasporti": "🚌",
                        "Svago": "🎮",
                        "Lavoro": "⚒️",
                        "Abbigliamento": "👕",
                        "Casa": "🏠",
                        "Salute": "🩺",
                        "Altro": "🔍"
                    };
                    
                    for(let i = 0; i < categories.length; i++) { 
                        const cat = categories[i];
                        const emoji = categoryEmojis[cat] || "📌";
                        const isAltro = cat === "Altro";
                    %>
                        <div class="category-item">
                            <input type="radio" name="category" id="cat-<%= cat %>" value="<%= cat %>" 
                                class="category-input" <%= isAltro ? 'checked' : '' %>>
                            <label for="cat-<%= cat %>" class="category-box">
                                <span class="category-emoji"><%= emoji %></span>
                                <span class="category-name"><%= cat %></span>
                            </label>
                        </div>
                    <% } %>
                </div>
            </div>
            
            <div class="mb-4">
                <label for="description" class="form-label">Descrizione (opzionale)</label>
                <textarea class="form-control custom-input" id="description" name="description" rows="3" placeholder="Inserisci una descrizione della transazione..."></textarea>
            </div>

            <button type="submit" class="btn custom-button w-100">Salva</button>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const amountInputs = document.querySelectorAll('.amount-input');
    const totalAmountSpan = document.getElementById('totalAmount');
    const participantCountSpan = document.getElementById('participantCount');
    const totalCounter = document.querySelector('.compact-total-counter');
    const participationCheckboxes = document.querySelectorAll('.participation-checkbox');
    const participationInfo = document.getElementById('participationInfo');
    const participationText = document.getElementById('participationText');
    
    // Gestione checkbox "Seleziona tutti"
    const selectAllMembers = document.getElementById('selectAllMembers');
    const selectAllInvited = document.getElementById('selectAllInvited');
    
    function updateSelectAllState() {
        // Aggiorna stato "Seleziona tutti" per membri
        if (selectAllMembers) {
            const memberCheckboxes = document.querySelectorAll('[data-user-type="member"] .participation-checkbox');
            const checkedMembers = document.querySelectorAll('[data-user-type="member"] .participation-checkbox:checked');
            selectAllMembers.checked = memberCheckboxes.length > 0 && memberCheckboxes.length === checkedMembers.length;
            selectAllMembers.indeterminate = checkedMembers.length > 0 && checkedMembers.length < memberCheckboxes.length;
        }
        
        // Aggiorna stato "Seleziona tutti" per invitati
        if (selectAllInvited) {
            const invitedCheckboxes = document.querySelectorAll('[data-user-type="invited"] .participation-checkbox');
            const checkedInvited = document.querySelectorAll('[data-user-type="invited"] .participation-checkbox:checked');
            selectAllInvited.checked = invitedCheckboxes.length > 0 && invitedCheckboxes.length === checkedInvited.length;
            selectAllInvited.indeterminate = checkedInvited.length > 0 && checkedInvited.length < invitedCheckboxes.length;
        }
    }
    
    // Event listener per "Seleziona tutti membri"
    if (selectAllMembers) {
        selectAllMembers.addEventListener('change', function() {
            const memberCheckboxes = document.querySelectorAll('[data-user-type="member"] .participation-checkbox');
            memberCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
                updateParticipantRow(checkbox);
            });
            calculateTotalAndParticipants();
        });
    }
    
    // Event listener per "Seleziona tutti invitati"
    if (selectAllInvited) {
        selectAllInvited.addEventListener('change', function() {
            const invitedCheckboxes = document.querySelectorAll('[data-user-type="invited"] .participation-checkbox');
            invitedCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
                updateParticipantRow(checkbox);
            });
            calculateTotalAndParticipants();
        });
    }
    
    function updateParticipantRow(checkbox) {
        const row = checkbox.closest('.participant-row');
        const amountInput = row.querySelector('.amount-input');
        
        if (checkbox.checked) {
            row.classList.remove('excluded');
            amountInput.disabled = false;
            amountInput.style.backgroundColor = '';
        } else {
            row.classList.add('excluded');
            amountInput.disabled = true;
            amountInput.value = '';
        }
    }
    
    function calculateTotalAndParticipants() {
        let total = 0;
        let participantCount = 0;
        const exemptedUsers = [];
        const participatingUsers = [];
        
        // Calcola totale e conta partecipanti
        participationCheckboxes.forEach(checkbox => {
            const row = checkbox.closest('.participant-row');
            const amountInput = row.querySelector('.amount-input');
            const username = checkbox.value;
            
            if (checkbox.checked) {
                participantCount++;
                participatingUsers.push(username);
                const value = parseFloat(amountInput.value) || 0;
                total += value;
            } else {
                exemptedUsers.push(username);
            }
        });
        
        // Aggiorna il display
        totalAmountSpan.textContent = `€${total.toFixed(2)}`;
        participantCountSpan.textContent = participantCount;
        
        // Mostra informazioni sui partecipanti
        if (exemptedUsers.length > 0) {
            participationInfo.style.display = 'block';
            participationText.textContent = `Utenti esclusi dalla divisione: ${exemptedUsers.join(', ')}`;
        } else {
            participationInfo.style.display = 'none';
        }
        
        // Animazione
        totalCounter.classList.add('pulse');
        setTimeout(() => {
            totalCounter.classList.remove('pulse');
        }, 500);
        
        // Aggiorna stato dei checkbox "Seleziona tutti"
        updateSelectAllState();
        
        return { total, participantCount, exemptedUsers };
    }
    
    // Event listeners per i checkbox di partecipazione
    participationCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            updateParticipantRow(this);
            calculateTotalAndParticipants();
        });
    });
    
    // Event listeners per gli input degli importi
    amountInputs.forEach(input => {
        input.addEventListener('input', calculateTotalAndParticipants);
    });
    
    // Inizializza lo stato
    participationCheckboxes.forEach(checkbox => {
        updateParticipantRow(checkbox);
    });
    calculateTotalAndParticipants();
    
    // Gestione del form submit per includere le esenzioni
    document.getElementById('transactionForm').addEventListener('submit', function(e) {
        const exemptedUsers = [];
        
        participationCheckboxes.forEach(checkbox => {
            if (!checkbox.checked) {
                exemptedUsers.push(checkbox.value);
            }
        });
        
        // Aggiungi campo nascosto con le esenzioni
        if (exemptedUsers.length > 0) {
            exemptedUsers.forEach(user => {
                const exemptionsInput = document.createElement('input');
                exemptionsInput.type = 'hidden';
                exemptionsInput.name = 'exemptedUsers[]';
                exemptionsInput.value = user;
                this.appendChild(exemptionsInput);
            });
        }
    });
});
</script>
